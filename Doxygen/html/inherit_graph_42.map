<map id="Graphical Class Hierarchy" name="Graphical Class Hierarchy">
<area shape="rect" id="node1" href="$classhoney_1_1_future_common.html" title="honey::FutureCommon\l\&lt; Future\&lt; R \&gt;, R \&gt;" alt="" coords="392,193,550,237"/>
<area shape="rect" id="node2" href="$classhoney_1_1_future.html" title="Unique future, guarantees sole access to a future function result. " alt="" coords="660,477,796,505"/>
<area shape="rect" id="node3" href="$classhoney_1_1_future_common.html" title="honey::FutureCommon\l\&lt; SharedFuture\&lt; R \&gt;, R \&gt;" alt="" coords="383,1949,558,1993"/>
<area shape="rect" id="node4" href="$classhoney_1_1_shared_future.html" title="Shared future, allows multiple access to a future function result. " alt="" coords="638,1355,818,1383"/>
<area shape="rect" id="node5" href="$classhoney_1_1_allocator_object.html" title="Objects that inherit from this class will use Alloc for new/delete ops. " alt="" coords="393,3341,548,3385"/>
<area shape="rect" id="node6" href="$classhoney_1_1_listener.html" title="Holds a slot that can receive signals. " alt="" coords="672,3301,784,3329"/>
<area shape="rect" id="node8" href="$classhoney_1_1_slot_base.html" title="Multicast receiver. " alt="" coords="669,3353,787,3381"/>
<area shape="rect" id="node7" href="$classhoney_1_1_listener_queue.html" title="Listener that holds queued slot for delayed processing of signals. " alt="" coords="906,3461,1059,3489"/>
<area shape="rect" id="node9" href="$structhoney_1_1future_1_1_async_sched__tag.html" title="honey::future::AsyncSched_tag" alt="" coords="625,3513,831,3541"/>
<area shape="rect" id="node10" href="$structhoney_1_1future_1_1_async_sched.html" title="honey::future::AsyncSched" alt="" coords="892,3513,1073,3541"/>
<area shape="rect" id="node11" href="$structhoney_1_1lockfree_1_1_hazard_mem_config.html" title="Configuration interface for memory manager. Inherit this class and override types and static members..." alt="" coords="125,117,317,161"/>
<area shape="rect" id="node12" href="$classhoney_1_1lockfree_1_1_list.html" title="Lock&#45;free doubly&#45;linked list. " alt="" coords="401,109,541,169"/>
<area shape="rect" id="node13" href="$structhoney_1_1mt_1_1_funcptr_base.html" title="Inherit to enable non&#45;virtual functor calling. " alt="" coords="140,3821,303,3849"/>
<area shape="rect" id="node14" href="$structhoney_1_1thread_1_1_pool_1_1_task.html" title="All tasks must inherit from this class. std::function is not used here to avoid the operator() virtua..." alt="" coords="402,3813,539,3857"/>
<area shape="rect" id="node15" href="$classhoney_1_1_dep_task.html" title="Base class of DepTask_, can be added to scheduler. Instances must be created through class DepTask_..." alt="" coords="670,3869,786,3897"/>
<area shape="rect" id="node18" href="$classhoney_1_1_periodic_task.html" title="Base class of PeriodicTask_, returned by scheduler. " alt="" coords="658,3573,798,3601"/>
<area shape="rect" id="node16" href="$classhoney_1_1_dep_task__.html" title="honey::DepTask_\&lt; void \&gt;" alt="" coords="897,3945,1069,3973"/>
<area shape="rect" id="node17" href="$classhoney_1_1_dep_task__.html" title="Holds a functor and dependency information, enqueue in a scheduler to run the task. " alt="" coords="890,3893,1075,3921"/>
<area shape="rect" id="node19" href="$classhoney_1_1_periodic_task__.html" title="Holds a functor and period information, returned by scheduler. " alt="" coords="912,3565,1053,3609"/>
<area shape="rect" id="node20" href="$structhoney_1_1mt_1_1_no_copy.html" title="Inherit to declare that class is not copyable. " alt="" coords="154,2025,289,2053"/>
<area shape="rect" id="node21" href="$classhoney_1_1lockfree_1_1_free_list.html" title="honey::lockfree::FreeList\l\&lt; Node \&gt;" alt="" coords="387,1605,554,1649"/>
<area shape="rect" id="node22" href="$classhoney_1_1lockfree_1_1_hazard_mem.html" title="honey::lockfree::HazardMem\l\&lt; honey::lockfree::List \&gt;" alt="" coords="375,1673,567,1717"/>
<area shape="rect" id="node23" href="$classhoney_1_1_alge__.html" title="Algebra. " alt="" coords="396,1741,545,1769"/>
<area shape="rect" id="node24" href="$classhoney_1_1_app.html" title="Top&#45;level application flow controller, provides entry point and run loop. " alt="" coords="426,1793,515,1821"/>
<area shape="rect" id="node25" href="$classhoney_1_1_condition.html" title="Method to synchronize threads. Condition variables eliminate the need for repeated polling to check t..." alt="" coords="410,57,531,85"/>
<area shape="rect" id="node27" href="$classhoney_1_1_future_base.html" title="Base class for Future types. " alt="" coords="404,753,538,781"/>
<area shape="rect" id="node28" href="$classhoney_1_1_interp__.html" title="Interpolation math. " alt="" coords="392,1845,549,1873"/>
<area shape="rect" id="node29" href="$classhoney_1_1lockfree_1_1_free_list.html" title="Lock&#45;free freelist, allocates re&#45;usable objects and provides automatic storage expansion for concurre..." alt="" coords="372,1897,570,1925"/>
<area shape="rect" id="node30" href="$classhoney_1_1lockfree_1_1_hazard_mem.html" title="Lock&#45;free memory manager, provides safe memory reclamation for concurrent algorithms. " alt="" coords="375,2017,567,2061"/>
<area shape="rect" id="node31" href="$classhoney_1_1lockfree_1_1_queue.html" title="Lock&#45;free FIFO queue. Uses auto&#45;expanding freelist allocator so memory is only reclaimed upon destruc..." alt="" coords="376,2085,566,2113"/>
<area shape="rect" id="node32" href="$classhoney_1_1lockfree_1_1_spsc_deque.html" title="Deque that is lock&#45;free only when used by a single producer and consumer, otherwise contention is spl..." alt="" coords="377,2137,565,2181"/>
<area shape="rect" id="node33" href="$classhoney_1_1lockfree_1_1_stack.html" title="Lock&#45;free FILO stack. Uses auto&#45;expanding freelist allocator so memory is only reclaimed upon destruc..." alt="" coords="379,2205,562,2233"/>
<area shape="rect" id="node34" href="$classhoney_1_1lockfree_1_1_unordered_map.html" title="Lock&#45;free unordered map. Uses auto&#45;expanding freelist allocator so memory is only reclaimed upon dest..." alt="" coords="366,2257,575,2301"/>
<area shape="rect" id="node35" href="$classhoney_1_1_mem_pool.html" title="Memory pool. " alt="" coords="410,2325,531,2353"/>
<area shape="rect" id="node36" href="$classhoney_1_1net_1_1_socket.html" title="Socket class. " alt="" coords="405,2377,537,2405"/>
<area shape="rect" id="node37" href="$classhoney_1_1net_1_1_stream_buf__.html" title="automatically resizable buffer class based on ByteStreamBuf " alt="" coords="394,261,548,305"/>
<area shape="rect" id="node38" href="$classhoney_1_1_packaged_task_3_01_r_07_param_8_8_8_08_4.html" title="honey::PackagedTask\l\&lt; R(Param...)\&gt;" alt="" coords="395,2429,547,2473"/>
<area shape="rect" id="node39" href="$classhoney_1_1_promise.html" title="Container to hold a delayed function result. " alt="" coords="397,2497,544,2525"/>
<area shape="rect" id="node40" href="$classhoney_1_1_real_base.html" title="Base class for real number operations. " alt="" coords="380,2549,561,2577"/>
<area shape="rect" id="node41" href="$classhoney_1_1_scope_guard__.html" title="Run a function at scope exit. See ScopeGuard() to create. " alt="" coords="381,2601,560,2629"/>
<area shape="rect" id="node42" href="$classhoney_1_1_shared_lock.html" title="A scoped lock that references a shared mutex. Does a shared read lock on construction and unlocks on ..." alt="" coords="399,2653,543,2697"/>
<area shape="rect" id="node43" href="$classhoney_1_1_shared_obj.html" title="Reference&#45;counted object for intrusive shared pointers. " alt="" coords="368,3513,574,3541"/>
<area shape="rect" id="node44" href="$classhoney_1_1_thread.html" title="Thread class. " alt="" coords="417,3737,524,3765"/>
<area shape="rect" id="node45" href="$structhoney_1_1thread_1_1_interrupt_enable.html" title="Enable / disable interrupts in the current thread&#39;s scope. " alt="" coords="391,2721,551,2765"/>
<area shape="rect" id="node46" href="$classhoney_1_1_transfer_lock.html" title="Scoped transfer of mutex ownership between two locks. " alt="" coords="394,2789,547,2833"/>
<area shape="rect" id="node47" href="$classhoney_1_1_unique_lock.html" title="A scoped lock that references any lockable. Locks on construction and unlocks on destruction. " alt="" coords="399,2857,542,2901"/>
<area shape="rect" id="node48" href="$classhoney_1_1_unique_ptr.html" title="Pointer to a unique, non&#45;shared, object. Finalizer is run upon destruction (deletes object by default..." alt="" coords="398,481,544,525"/>
<area shape="rect" id="node49" href="$classhoney_1_1lockfree_1_1_queue.html" title="honey::lockfree::Queue\l\&lt; TaskPtr \&gt;" alt="" coords="391,329,550,373"/>
<area shape="rect" id="node50" href="$classhoney_1_1lockfree_1_1_queue.html" title="honey::lockfree::Queue\l\&lt; tuple\&lt; Action, honey\l::PeriodicTask::Ptr \&gt; \&gt;" alt="" coords="391,397,550,457"/>
<area shape="rect" id="node51" href="$classhoney_1_1_real_base.html" title="honey::RealBase\&lt; double \&gt;" alt="" coords="378,2925,564,2953"/>
<area shape="rect" id="node53" href="$classhoney_1_1_real_base.html" title="honey::RealBase\&lt; float \&gt;" alt="" coords="385,2977,556,3005"/>
<area shape="rect" id="node55" href="$classhoney_1_1_real_base.html" title="honey::RealBase\&lt; float128 \&gt;" alt="" coords="374,3029,567,3057"/>
<area shape="rect" id="node57" href="$classhoney_1_1_shared_obj.html" title="honey::SharedObj\&lt; DepTask \&gt;" alt="" coords="369,3685,573,3713"/>
<area shape="rect" id="node58" href="$classhoney_1_1_shared_obj.html" title="honey::SharedObj\&lt; Exception \&gt;" alt="" coords="365,3185,576,3213"/>
<area shape="rect" id="node74" href="$classhoney_1_1_shared_obj.html" title="honey::SharedObj\&lt; Listener \&gt;" alt="" coords="371,3237,570,3265"/>
<area shape="rect" id="node75" href="$classhoney_1_1_shared_obj.html" title="honey::SharedObj\&lt; Module \&gt;" alt="" coords="373,3461,568,3489"/>
<area shape="rect" id="node77" href="$classhoney_1_1_shared_obj.html" title="honey::SharedObj\&lt; Object \&gt;" alt="" coords="376,3633,566,3661"/>
<area shape="rect" id="node85" href="$classhoney_1_1_shared_obj.html" title="honey::SharedObj\&lt; Periodic\lTask \&gt;" alt="" coords="376,3565,565,3609"/>
<area shape="rect" id="node86" href="$classhoney_1_1_shared_obj.html" title="honey::SharedObj\&lt; Pool \&gt;" alt="" coords="381,3409,560,3437"/>
<area shape="rect" id="node88" href="$classhoney_1_1_shared_obj.html" title="honey::SharedObj\&lt; Sink \&gt;" alt="" coords="382,3081,560,3109"/>
<area shape="rect" id="node93" href="$classhoney_1_1_shared_obj.html" title="honey::SharedObj\&lt; State \&gt;" alt="" coords="379,3289,562,3317"/>
<area shape="rect" id="node94" href="$classhoney_1_1_unique_lock.html" title="honey::UniqueLock\&lt;\l SpinLock \&gt;" alt="" coords="399,549,542,593"/>
<area shape="rect" id="node95" href="$classhoney_1_1_unique_ptr.html" title="honey::UniquePtr\&lt; Block,\l honey::finalize\&lt; Block,\l Alloc \&gt; \&gt;" alt="" coords="385,617,557,677"/>
<area shape="rect" id="node96" href="$classhoney_1_1_unique_ptr.html" title="honey::UniquePtr\&lt; Bucket \&gt;" alt="" coords="377,701,565,729"/>
<area shape="rect" id="node97" href="$classhoney_1_1_unique_ptr.html" title="honey::UniquePtr\&lt; Heap \&gt;" alt="" coords="381,805,560,833"/>
<area shape="rect" id="node98" href="$classhoney_1_1_unique_ptr.html" title="honey::UniquePtr\&lt; honey\l::ConditionLock \&gt;" alt="" coords="385,857,557,901"/>
<area shape="rect" id="node99" href="$classhoney_1_1_unique_ptr.html" title="honey::UniquePtr\&lt; honey\l::ListenerList \&gt;" alt="" coords="385,925,557,969"/>
<area shape="rect" id="node100" href="$classhoney_1_1_unique_ptr.html" title="honey::UniquePtr\&lt; honey\l::lockfree::HazardMem\l::ThreadData::DelNode[]\&gt;" alt="" coords="384,993,557,1053"/>
<area shape="rect" id="node101" href="$classhoney_1_1_unique_ptr.html" title="honey::UniquePtr\&lt; honey\l::SlotBase \&gt;" alt="" coords="385,1077,557,1121"/>
<area shape="rect" id="node102" href="$classhoney_1_1_unique_ptr.html" title="honey::UniquePtr\&lt; honey\l::SpinLock \&gt;" alt="" coords="385,1145,557,1189"/>
<area shape="rect" id="node103" href="$classhoney_1_1_unique_ptr.html" title="honey::UniquePtr\&lt; std\l::string \&gt;" alt="" coords="394,1213,547,1257"/>
<area shape="rect" id="node104" href="$classhoney_1_1_unique_ptr.html" title="honey::UniquePtr\&lt; T,\l honey::finalize\&lt; T,\l Alloc \&gt; \&gt;" alt="" coords="398,1281,544,1341"/>
<area shape="rect" id="node105" href="$classhoney_1_1_unique_ptr.html" title="honey::UniquePtr\&lt; Thread\lData \&gt;" alt="" coords="382,1365,560,1409"/>
<area shape="rect" id="node106" href="$classhoney_1_1_unique_ptr.html" title="honey::UniquePtr\&lt; uint8 \&gt;" alt="" coords="383,1433,559,1461"/>
<area shape="rect" id="node107" href="$classhoney_1_1_unique_ptr.html" title="honey::UniquePtr\&lt; Vec\l\&lt; dim, Real \&gt;[]\&gt;" alt="" coords="392,1485,550,1529"/>
<area shape="rect" id="node108" href="$classhoney_1_1_unique_ptr.html" title="honey::UniquePtr\&lt; Worker \&gt;" alt="" coords="376,1553,566,1581"/>
<area shape="rect" id="node26" href="$classhoney_1_1_condition_lock.html" title="Lock that is bound to a single condition. This is the common usage case of condition variables..." alt="" coords="653,57,803,85"/>
<area shape="rect" id="node52" href="$classhoney_1_1_double__.html" title="Defines 64&#45;bit floating point operations and constants. " alt="" coords="671,2925,785,2953"/>
<area shape="rect" id="node54" href="$classhoney_1_1_float__.html" title="Defines floating point operations and constants. " alt="" coords="677,2977,779,3005"/>
<area shape="rect" id="node56" href="$classhoney_1_1_quad__.html" title="Defines 128&#45;bit floating point operations and constants. " alt="" coords="675,3029,781,3057"/>
<area shape="rect" id="node59" href="$classhoney_1_1_exception.html" title="Base exception class. Exceptions inherited from this class provide debug info and can be thrown polym..." alt="" coords="666,3133,790,3161"/>
<area shape="rect" id="node60" href="$structhoney_1_1_app_1_1_terminated.html" title="Process terminated. Use this interrupt to exit the run loop. " alt="" coords="902,3029,1064,3057"/>
<area shape="rect" id="node61" href="$structhoney_1_1debug_1_1_assertion_failure.html" title="Thrown on debug assert() failure. " alt="" coords="880,3081,1086,3109"/>
<area shape="rect" id="node62" href="$structhoney_1_1_enum_error.html" title="honey::EnumError" alt="" coords="918,3133,1047,3161"/>
<area shape="rect" id="node63" href="$structhoney_1_1exception_1_1_std.html" title="Wrapper around std exception to allow for polymorphic throw. " alt="" coords="893,3185,1073,3213"/>
<area shape="rect" id="node64" href="$structhoney_1_1exception_1_1_unknown.html" title="honey::exception::Unknown" alt="" coords="890,3237,1075,3265"/>
<area shape="rect" id="node65" href="$structhoney_1_1future_1_1_already_satisfied.html" title="honey::future::AlreadySatisfied" alt="" coords="881,3289,1084,3317"/>
<area shape="rect" id="node66" href="$structhoney_1_1future_1_1_broken.html" title="Exceptions. " alt="" coords="908,3341,1057,3369"/>
<area shape="rect" id="node67" href="$structhoney_1_1future_1_1_future_already_retrieved.html" title="honey::future::FutureAlready\lRetrieved" alt="" coords="888,3393,1078,3437"/>
<area shape="rect" id="node68" href="$structhoney_1_1future_1_1_no_state.html" title="honey::future::NoState" alt="" coords="905,2701,1060,2729"/>
<area shape="rect" id="node69" href="$structhoney_1_1json_1_1_value_error.html" title="honey::json::ValueError" alt="" coords="903,2753,1063,2781"/>
<area shape="rect" id="node70" href="$structhoney_1_1_periodic_task_1_1_cancelled.html" title="Future result when cancelled. " alt="" coords="912,2805,1053,2849"/>
<area shape="rect" id="node71" href="$structhoney_1_1_property_error.html" title="honey::PropertyError" alt="" coords="910,2873,1055,2901"/>
<area shape="rect" id="node72" href="$structhoney_1_1thread_1_1_interrupted.html" title="Interrupted exception. " alt="" coords="895,2925,1070,2953"/>
<area shape="rect" id="node73" href="$structhoney_1_1_variant_error.html" title="honey::VariantError" alt="" coords="915,2977,1051,3005"/>
<area shape="rect" id="node76" href="$structhoney_1_1app_1_1_module.html" title="An application module, holds a task and its dependencies. " alt="" coords="659,3461,797,3489"/>
<area shape="rect" id="node78" href="$classhoney_1_1_object.html" title="Base class for objects. " alt="" coords="676,3685,780,3713"/>
<area shape="rect" id="node79" href="$classhoney_1_1_com_object.html" title="Component object. Object that consists of a collection of components. " alt="" coords="917,3841,1049,3869"/>
<area shape="rect" id="node80" href="$classhoney_1_1_component.html" title="Base class for components. Components can only be attached to one ComObject at a time. " alt="" coords="916,3633,1050,3661"/>
<area shape="rect" id="node81" href="$classhoney_1_1_property_base.html" title="Base class for all properties. " alt="" coords="910,3685,1056,3713"/>
<area shape="rect" id="node84" href="$classhoney_1_1_property_object.html" title="Object that contains properties. " alt="" coords="906,3789,1060,3817"/>
<area shape="rect" id="node82" href="$classhoney_1_1_property.html" title="Generic property. " alt="" coords="1142,3651,1288,3679"/>
<area shape="rect" id="node83" href="$classhoney_1_1_property_3_01vector_3_01_t_01_4_01_4.html" title="Generic vector property. " alt="" coords="1133,3703,1296,3747"/>
<area shape="rect" id="node87" href="$classhoney_1_1thread_1_1_pool.html" title="Spreads task execution across a pool of re&#45;usable threads. Uses a lock&#45;free work&#45;stealing queue to en..." alt="" coords="660,3409,796,3437"/>
<area shape="rect" id="node89" href="$structhoney_1_1log_1_1_sink.html" title="honey::log::Sink" alt="" coords="670,3081,786,3109"/>
<area shape="rect" id="node90" href="$structhoney_1_1log_1_1_buffer_sink.html" title="Captures records in a buffer. " alt="" coords="907,2597,1058,2625"/>
<area shape="rect" id="node91" href="$structhoney_1_1log_1_1_stream_sink.html" title="Formats record to a stream. " alt="" coords="903,2649,1062,2677"/>
<area shape="rect" id="node92" href="$structhoney_1_1log_1_1_file_sink.html" title="Formats record to a file stream. " alt="" coords="1146,2649,1284,2677"/>
<area shape="rect" id="node111" href="$classhoney_1_1_mutex.html" title="A thread lock where the lock is acquired by suspending thread execution until it becomes available..." alt="" coords="420,5,521,33"/>
<area shape="rect" id="node112" href="$classhoney_1_1_timed_mutex.html" title="A mutex that has a timed try&#45;lock. " alt="" coords="659,5,797,33"/>
<area shape="rect" id="node115" title="STL class. " alt="" coords="419,3133,522,3161"/>
<area shape="rect" id="node117" href="$classhoney_1_1_byte_stream_buf.html" title="A stream I/O buffer of bytes, to be passed into ByteStream. " alt="" coords="144,269,299,297"/>
<area shape="rect" id="node118" title="STL class. " alt="" coords="926,3737,1039,3765"/>
<area shape="rect" id="node119" href="$classhoney_1_1_bytes.html" title="String of bytes. " alt="" coords="1165,3771,1264,3799"/>
</map>
